import { setup } from "@contentful/dam-app-base";
import { render } from "react-dom";
import logo from "./logo.png";
import "./index.css";
import { InstantSearch } from "./InstantSearch";

const CTA = "Select DAM media";

setup({
  cta: CTA,
  name: "Acquia DAM App",
  logo,
  color: "#036FE3",
  description:
    "Acquia DAM app provides integration between Contentful and Acquia DAM.",
  parameterDefinitions: [
    {
      id: "domain",
      type: "Symbol",
      name: "Acquia DAM Domain",
      description: "Provide the domain name here",
      required: true,
    },
    {
      id: "authToken",
      type: "Symbol",
      name: "Auth Token",
      description: (
        <span>
          A personal access token can be generated by logging into the Acquia
          DAM application and accessing the API Setup page (Admin | Global
          Settings). Read more{" "}
          <a
            target="_blank"
            href="https://widenv2.docs.apiary.io/#introduction/authentication"
          >
            here
          </a>
        </span>
      ),
      required: true,
    },
  ],
  validateParameters,
  makeThumbnail,
  renderDialog,
  openDialog,
  isDisabled: () => false,
});

function makeThumbnail(attachment) {
  const thumbnail = attachment.thumbnail_link;
  const url = typeof thumbnail === "string" ? thumbnail : undefined;
  const alt = attachment.embed_name;
  return [url, alt];
}

function canAddAssets(currentValue, maxAllowedAssets) {
  if (maxAllowedAssets === 0) {
    return true;
  }
  const itemsLength = Array.isArray(currentValue) ? currentValue.length : 0;

  if (itemsLength >= maxAllowedAssets) {
    return false;
  }
}

function DialogLocation({ sdk }) {
  const { config, instance: instanceConfig } = sdk.parameters.invocation;
  const { authToken } = config;

  return (
    <InstantSearch
      onSelect={sdk.close}
      authToken={authToken}
      initialQuery={instanceConfig.initialQuery}
      hideSearchBar={instanceConfig.hideSearchBar}
    />
  );
}

async function renderDialog(sdk) {
  render(<DialogLocation sdk={sdk} />, document.getElementById("root"));
  sdk.window.startAutoResizer();
}

async function openDialog(sdk, currentValue, config) {
  const maxAllowedAssets = sdk.parameters.instance.maxAllowedAssets;
  if (canAddAssets(currentValue, maxAllowedAssets) === false) {
    sdk.notifier.error(
      `Maximum number of assets (${maxAllowedAssets}) have been selected. Please remove some assets and try again.`
    );
    return [];
  }

  const result = await sdk.dialogs.openCurrentApp({
    position: "center",
    title: CTA,
    shouldCloseOnOverlayClick: true,
    shouldCloseOnEscapePress: true,
    width: 1200,
    minHeight: 800,
    parameters: {
      config,
      instance: { ...sdk.parameters.instance },
      currentValue,
    },
    allowHeightOverflow: true,
  });

  if (!Array.isArray(result)) {
    return [];
  }

  return result.map((asset) => asset);
}

function validateParameters({ authToken, domain }) {
  if (!domain) {
    return "Please add Acquia DAM Domain";
  }

  if (!authToken) {
    return "Please add an auth token";
  }

  return null;
}
